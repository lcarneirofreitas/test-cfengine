###################################################

## body para acertar permissoes
body perms change_owner(mode,user,group) {

                        owners => { "$(user)" };
                        groups => { "$(group)" };
                        mode => "$(mode)";
}

## bundle para criar diretorios e acertar permissoes
bundle agent create_directories(directories,mod,user,group) {

        files:  

                "$(directories)/."
                        pathtype => "literal",
                        perms => change_owner("$(mod)","$(user)","$(group)"),
                        create => "true";
}

## bundle para criar arquivos e acertar permissoes
bundle agent create_files(file,mod,user,group) {

        files:  

                "$(file)"
                        pathtype => "literal",
                        perms => change_owner("$(mod)","$(user)","$(group)"),
                        create => "true";
}

## bundle para deletar arquivos
bundle agent delete_file(files) {

        files:
                "$(files)"
                        delete => tidy;
}

## bundle para instalar/remover/update de pacotes
bundle agent control_package(method,pkg,policy) {

        classes:
                redhat::
                        "$(policy)" expression => isvariable(policy);

                redhat.add::
                        "has_package" expression => returnszero("/bin/rpm -q ${pkg} --quiet", "noshell");

		debian::
			"$(method)" expression => isvariable(method);

        packages:
                debian.apt::
                "$(pkg)"
                        package_policy => "$(policy)",
                        package_method => apt,
                        package_select => ">=";

                debian.pip::
                "$(pkg)"
                        package_policy => "$(policy)",
                        package_method => pip(""),
                        package_select => ">=";

                debian.npm::
                "$(pkg)"
                        package_policy => "$(policy)",
                        package_method => npm_g,
                        package_select => ">=";

                redhat.!add::
                "$(pkg)"
                        package_policy => "$(policy)",
                        package_method => yum;

                redhat.add.!has_package::
                "$(pkg)"
                        package_policy => "$(policy)",
                        package_method => yum;
}

